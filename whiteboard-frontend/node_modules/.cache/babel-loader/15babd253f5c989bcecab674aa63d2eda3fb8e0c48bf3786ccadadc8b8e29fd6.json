{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stack mern,mean,java\\\\Whiteboard Application\\\\whiteboard-frontend\\\\src\\\\pages\\\\canvas\\\\WhiteboardRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generator = rough.generator();\nconst WhiteboardRoom = ({\n  userNo,\n  socket,\n  setUsers,\n  setUserNo\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n  const [color, setColor] = useState(\"#000000\");\n  const [elements, setElements] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [tool, setTool] = useState(\"pencil\");\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      alert(data.message);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"users\", data => {\n      setUsers(data);\n      setUserNo(data.length);\n    });\n  }, [setUsers, setUserNo, socket]);\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    setElements([]);\n  };\n  useEffect(() => {\n    ctx.current.strokeStyle = color;\n  }, [color]);\n  const handleMouseDown = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"pencil\") {\n      setElements(prevElements => [...prevElements, {\n        offsetX,\n        offsetY,\n        path: [[offsetX, offsetY]],\n        stroke: color,\n        element: tool\n      }]);\n    } else {\n      setElements(prevElements => [...prevElements, {\n        offsetX,\n        offsetY,\n        stroke: color,\n        element: tool\n      }]);\n    }\n    setIsDrawing(true);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (tool === \"rect\") {\n      setElements(prevElements => prevElements.map((ele, index) => index === elements.length - 1 ? {\n        offsetX: ele.offsetX,\n        offsetY: ele.offsetY,\n        width: offsetX - ele.offsetX,\n        height: offsetY - ele.offsetY,\n        stroke: ele.stroke,\n        element: ele.element\n      } : ele));\n    } else if (tool === \"line\") {\n      setElements(prevElements => prevElements.map((ele, index) => index === elements.length - 1 ? {\n        offsetX: ele.offsetX,\n        offsetY: ele.offsetY,\n        width: offsetX,\n        height: offsetY,\n        stroke: ele.stroke,\n        element: ele.element\n      } : ele));\n    } else if (tool === \"pencil\") {\n      setElements(prevElements => prevElements.map((ele, index) => index === elements.length - 1 ? {\n        offsetX: ele.offsetX,\n        offsetY: ele.offsetY,\n        path: [...ele.path, [offsetX, offsetY]],\n        stroke: ele.stroke,\n        element: ele.element\n      } : ele));\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n  };\n  useLayoutEffect(() => {\n    const roughCanvas = rough.canvas(canvasRef.current);\n    if (elements.length > 0) {\n      ctx.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n    elements.forEach((ele, i) => {\n      if (ele.element === \"rect\") {\n        roughCanvas.draw(generator.rectangle(ele.offsetX, ele.offsetY, ele.width, ele.height, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        }));\n      } else if (ele.element === \"line\") {\n        roughCanvas.draw(generator.line(ele.offsetX, ele.offsetY, ele.width, ele.height, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        }));\n      } else if (ele.element === \"pencil\") {\n        roughCanvas.linearPath(ele.path, {\n          stroke: ele.stroke,\n          roughness: 0,\n          strokeWidth: 5\n        });\n      }\n    });\n    const canvasImage = canvasRef.current.toDataURL();\n    socket.emit(\"drawing\", canvasImage);\n  }, [elements, canvasRef, ctx, socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-5 pt-4 pb-3 text-center\",\n        children: [\"Whiteboard -\", userNo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(WhiteboardRoom, \"/swIq9Usvur85IGwupBK7qUFSKs=\");\n_c = WhiteboardRoom;\nexport default WhiteboardRoom;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLayoutEffect","rough","jsxDEV","_jsxDEV","generator","WhiteboardRoom","userNo","socket","setUsers","setUserNo","_s","canvasRef","ctx","color","setColor","elements","setElements","history","setHistory","tool","setTool","isDrawing","setIsDrawing","on","data","alert","message","length","clearCanvas","canvas","current","context","getContext","fillStyle","fillRect","width","height","strokeStyle","handleMouseDown","e","offsetX","offsetY","nativeEvent","prevElements","path","stroke","element","handleMouseMove","map","ele","index","handleMouseUp","roughCanvas","clearRect","forEach","i","draw","rectangle","roughness","strokeWidth","line","linearPath","canvasImage","toDataURL","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/full stack mern,mean,java/Whiteboard Application/whiteboard-frontend/src/pages/canvas/WhiteboardRoom.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useLayoutEffect } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\n\r\nconst generator = rough.generator();\r\n\r\nconst WhiteboardRoom = ({ userNo, socket, setUsers, setUserNo }) => {\r\n  const canvasRef = useRef(null);\r\n  const ctx = useRef(null);\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [elements, setElements] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [tool, setTool] = useState(\"pencil\");\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (data) => {\r\n      alert(data.message);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users\", (data) => {\r\n      setUsers(data);\r\n      setUserNo(data.length);\r\n    });\r\n  }, [setUsers, setUserNo, socket]);\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    setElements([]);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    ctx.current.strokeStyle = color;\r\n  }, [color]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"pencil\") {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        {\r\n          offsetX,\r\n          offsetY,\r\n          path: [[offsetX, offsetY]],\r\n          stroke: color,\r\n          element: tool,\r\n        },\r\n      ]);\r\n    } else {\r\n      setElements((prevElements) => [\r\n        ...prevElements,\r\n        { offsetX, offsetY, stroke: color, element: tool },\r\n      ]);\r\n    }\r\n\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    if (tool === \"rect\") {\r\n      setElements((prevElements) =>\r\n        prevElements.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? {\r\n                offsetX: ele.offsetX,\r\n                offsetY: ele.offsetY,\r\n                width: offsetX - ele.offsetX,\r\n                height: offsetY - ele.offsetY,\r\n                stroke: ele.stroke,\r\n                element: ele.element,\r\n              }\r\n            : ele\r\n        )\r\n      );\r\n    } else if (tool === \"line\") {\r\n      setElements((prevElements) =>\r\n        prevElements.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? {\r\n                offsetX: ele.offsetX,\r\n                offsetY: ele.offsetY,\r\n                width: offsetX,\r\n                height: offsetY,\r\n                stroke: ele.stroke,\r\n                element: ele.element,\r\n              }\r\n            : ele\r\n        )\r\n      );\r\n    } else if (tool === \"pencil\") {\r\n      setElements((prevElements) =>\r\n        prevElements.map((ele, index) =>\r\n          index === elements.length - 1\r\n            ? {\r\n                offsetX: ele.offsetX,\r\n                offsetY: ele.offsetY,\r\n                path: [...ele.path, [offsetX, offsetY]],\r\n                stroke: ele.stroke,\r\n                element: ele.element,\r\n              }\r\n            : ele\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const roughCanvas = rough.canvas(canvasRef.current);\r\n    if (elements.length > 0) {\r\n      ctx.current.clearRect(\r\n        0,\r\n        0,\r\n        canvasRef.current.width,\r\n        canvasRef.current.height\r\n      );\r\n    }\r\n    elements.forEach((ele, i) => {\r\n      if (ele.element === \"rect\") {\r\n        roughCanvas.draw(\r\n          generator.rectangle(ele.offsetX, ele.offsetY, ele.width, ele.height, {\r\n            stroke: ele.stroke,\r\n            roughness: 0,\r\n            strokeWidth: 5,\r\n          })\r\n        );\r\n      } else if (ele.element === \"line\") {\r\n        roughCanvas.draw(\r\n          generator.line(ele.offsetX, ele.offsetY, ele.width, ele.height, {\r\n            stroke: ele.stroke,\r\n            roughness: 0,\r\n            strokeWidth: 5,\r\n          })\r\n        );\r\n      } else if (ele.element === \"pencil\") {\r\n        roughCanvas.linearPath(ele.path, {\r\n          stroke: ele.stroke,\r\n          roughness: 0,\r\n          strokeWidth: 5,\r\n        });\r\n      }\r\n    });\r\n    const canvasImage = canvasRef.current.toDataURL();\r\n    socket.emit(\"drawing\", canvasImage);\r\n  }, [elements, canvasRef, ctx, socket]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <h1 className=\"display-5 pt-4 pb-3 text-center\">Whiteboard -{userNo}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhiteboardRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}