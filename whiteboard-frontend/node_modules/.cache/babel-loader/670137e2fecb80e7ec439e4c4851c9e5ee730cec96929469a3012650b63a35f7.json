{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stack mern,mean,java\\\\Whiteboard Application\\\\whiteboard-frontend\\\\src\\\\pages\\\\Dashboard\\\\dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        // Assuming you have an API endpoint to fetch user data by ID\n        const response = await fetch(`/api/users/`); // Replace with your actual API endpoint\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        navigate(\"/login\");\n      }\n    };\n\n    // Call the fetchUser function when the component mounts\n    fetchUser();\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  if (!user) {\n    // If user data is not yet loaded, you can show a loading indicator or redirect to login\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [user.firstName, \" \", user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to the Dashboard, \", user.firstName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7CTApz3LMzC8LG1QZqzjZq1hx+k=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","user","setUser","fetchUser","response","fetch","userData","json","error","console","handleLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","firstName","lastName","email","onClick","_c","$RefreshReg$"],"sources":["D:/full stack mern,mean,java/Whiteboard Application/whiteboard-frontend/src/pages/Dashboard/dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        // Assuming you have an API endpoint to fetch user data by ID\r\n        const response = await fetch(`/api/users/`); // Replace with your actual API endpoint\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    // Call the fetchUser function when the component mounts\r\n    fetchUser();\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  if (!user) {\r\n    // If user data is not yet loaded, you can show a loading indicator or redirect to login\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Side Navbar */}\r\n      <div className=\"side-navbar\">\r\n        <h2>{user.firstName} {user.lastName}</h2>\r\n        <p>{user.email}</p>\r\n        <div className=\"btns\">\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"main-content\">\r\n        {/* Your existing content goes here */}\r\n        <h1>Welcome to the Dashboard, {user.firstName}!</h1>\r\n        {/* Add more content as needed */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAY,CAAC,CAAC,CAAC;QAC7C,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCL,OAAO,CAACI,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDR,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;;IAED;IACAG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCZ,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,IAAI,CAACC,IAAI,EAAE;IACT;IACA,oBAAOJ,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,qBAAqB;IAAAL,QAAA,gBAElChB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,GAAKZ,IAAI,CAACkB,SAAS,EAAC,GAAC,EAAClB,IAAI,CAACmB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCpB,OAAA;QAAAgB,QAAA,EAAIZ,IAAI,CAACoB;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBpB,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAL,QAAA,eACnBhB,OAAA;UAAQqB,SAAS,EAAC,gBAAgB;UAACI,OAAO,EAAEZ,YAAa;UAAAG,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpB,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAL,QAAA,eAE3BhB,OAAA;QAAAgB,QAAA,GAAI,4BAA0B,EAACZ,IAAI,CAACkB,SAAS,EAAC,GAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CApDID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAA4B,EAAA,GADxBzB,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}