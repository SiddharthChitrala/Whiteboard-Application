{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stack mern,mean,java\\\\Whiteboard Application\\\\whiteboard-frontend\\\\src\\\\pages\\\\Room\\\\ClientRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientRoom = ({\n  socket\n}) => {\n  _s();\n  const imgRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      alert(data.message);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"users\", data => {\n      // Update user information\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"canvasImage\", data => {\n      if (data && data.imageURL) {\n        imgRef.current.src = data.imageURL;\n      } else {\n        alert(\"Invalid image data received\");\n      }\n    });\n  }, [socket]);\n  useEffect(() => {\n    // Listen for drawing data from the server\n    socket.on(\"draw\", data => {\n      // Here, update the canvas in ClientRoom using the drawing data received\n      // Use similar canvas drawing logic as in WhiteboardRoom to display the drawing\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8 overflow-hidden border border-dark px-0 mx-auto mt-3\",\n      style: {\n        height: \"500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"w-100 h-100\",\n        ref: imgRef,\n        src: \"\",\n        alt: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientRoom, \"KIs6h+lONvHcrpnYpXhfcW8RJwA=\");\n_c = ClientRoom;\nexport default ClientRoom;\nvar _c;\n$RefreshReg$(_c, \"ClientRoom\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ClientRoom","socket","_s","imgRef","on","data","alert","message","imageURL","current","src","className","children","style","height","ref","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/full stack mern,mean,java/Whiteboard Application/whiteboard-frontend/src/pages/Room/ClientRoom.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\n\r\nconst ClientRoom = ({ socket }) => {\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (data) => {\r\n      alert(data.message);\r\n    });\r\n  }, [socket]);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users\", (data) => {\r\n      // Update user information\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"canvasImage\", (data) => {\r\n      if (data && data.imageURL) {\r\n        imgRef.current.src = data.imageURL;\r\n      } else {\r\n        alert(\"Invalid image data received\");\r\n      }\r\n    });\r\n  }, [socket]);\r\n  \r\n\r\n  useEffect(() => {\r\n    // Listen for drawing data from the server\r\n    socket.on(\"draw\", (data) => {\r\n      // Here, update the canvas in ClientRoom using the drawing data received\r\n      // Use similar canvas drawing logic as in WhiteboardRoom to display the drawing\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Other elements */}\r\n      <div className=\"col-md-8 overflow-hidden border border-dark px-0 mx-auto mt-3\" style={{ height: \"500px\" }}>\r\n        <img className=\"w-100 h-100\" ref={imgRef} src=\"\" alt=\"canvas\" />\r\n      </div>\r\n      {/* Other elements */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientRoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdK,MAAM,CAACG,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7BC,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAGZL,SAAS,CAAC,MAAM;IACdK,MAAM,CAACG,EAAE,CAAC,OAAO,EAAGC,IAAI,IAAK;MAC3B;IAAA,CACD,CAAC;EACJ,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZL,SAAS,CAAC,MAAM;IACdK,MAAM,CAACG,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjC,IAAIA,IAAI,IAAIA,IAAI,CAACG,QAAQ,EAAE;QACzBL,MAAM,CAACM,OAAO,CAACC,GAAG,GAAGL,IAAI,CAACG,QAAQ;MACpC,CAAC,MAAM;QACLF,KAAK,CAAC,6BAA6B,CAAC;MACtC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAGZL,SAAS,CAAC,MAAM;IACd;IACAK,MAAM,CAACG,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;MAC1B;MACA;IAAA,CACD,CAAC;EACJ,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAE9Bb,OAAA;MAAKY,SAAS,EAAC,+DAA+D;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAF,QAAA,eACxGb,OAAA;QAAKY,SAAS,EAAC,aAAa;QAACI,GAAG,EAAEZ,MAAO;QAACO,GAAG,EAAC,EAAE;QAACM,GAAG,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}