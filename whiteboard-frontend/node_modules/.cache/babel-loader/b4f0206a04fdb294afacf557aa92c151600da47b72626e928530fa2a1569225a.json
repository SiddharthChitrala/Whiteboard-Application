{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stack mern,mean,java\\\\Whiteboard Application\\\\whiteboard-frontend\\\\src\\\\pages\\\\canvas\\\\WhiteboardRoom.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport getStroke from \"perfect-freehand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generator = rough.generator();\nconst createElement = (id, x1, y1, x2, y2, type) => {\n  switch (type) {\n    case \"line\":\n    case \"rectangle\":\n      const roughElement = type === \"line\" ? generator.line(x1, y1, x2, y2) : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\n      return {\n        id,\n        x1,\n        y1,\n        x2,\n        y2,\n        type,\n        roughElement\n      };\n    case \"pencil\":\n      return {\n        id,\n        type,\n        points: [{\n          x: x1,\n          y: y1\n        }]\n      };\n    case \"text\":\n      return {\n        id,\n        type,\n        x1,\n        y1,\n        x2,\n        y2,\n        text: \"\"\n      };\n    default:\n      throw new Error(`Type not recognised: ${type}`);\n  }\n};\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\n  const a = {\n    x: x1,\n    y: y1\n  };\n  const b = {\n    x: x2,\n    y: y2\n  };\n  const c = {\n    x,\n    y\n  };\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\n};\nconst positionWithinElement = (x, y, element) => {\n  const {\n    type,\n    x1,\n    x2,\n    y1,\n    y2\n  } = element;\n  switch (type) {\n    case \"line\":\n      const on = onLine(x1, y1, x2, y2, x, y);\n      const start = nearPoint(x, y, x1, y1, \"start\");\n      const end = nearPoint(x, y, x2, y2, \"end\");\n      return start || end || on;\n    case \"rectangle\":\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\n    case \"pencil\":\n      const betweenAnyPoint = element.points.some((point, index) => {\n        const nextPoint = element.points[index + 1];\n        if (!nextPoint) return false;\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\n      });\n      return betweenAnyPoint ? \"inside\" : null;\n    case \"text\":\n      return x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n    default:\n      throw new Error(`Type not recognised: ${type}`);\n  }\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\nconst getElementAtPosition = (x, y, elements) => {\n  return elements.map(element => ({\n    ...element,\n    position: positionWithinElement(x, y, element)\n  })).find(element => element.position !== null);\n};\nconst adjustElementCoordinates = element => {\n  const {\n    type,\n    x1,\n    y1,\n    x2,\n    y2\n  } = element;\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return {\n      x1: minX,\n      y1: minY,\n      x2: maxX,\n      y2: maxY\n    };\n  } else {\n    if (x1 < x2 || x1 === x2 && y1 < y2) {\n      return {\n        x1,\n        y1,\n        x2,\n        y2\n      };\n    } else {\n      return {\n        x1: x2,\n        y1: y2,\n        x2: x1,\n        y2: y1\n      };\n    }\n  }\n};\nconst cursorForPosition = position => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n    default:\n      return \"move\";\n  }\n};\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const {\n    x1,\n    y1,\n    x2,\n    y2\n  } = coordinates;\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return {\n        x1: clientX,\n        y1: clientY,\n        x2,\n        y2\n      };\n    case \"tr\":\n      return {\n        x1,\n        y1: clientY,\n        x2: clientX,\n        y2\n      };\n    case \"bl\":\n      return {\n        x1: clientX,\n        y1,\n        x2,\n        y2: clientY\n      };\n    case \"br\":\n    case \"end\":\n      return {\n        x1,\n        y1,\n        x2: clientX,\n        y2: clientY\n      };\n    default:\n      return null;\n    //should not really get here...\n  }\n};\n\nconst useHistory = initialState => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n  const setState = (action, overwrite = false) => {\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex(prevState => prevState + 1);\n    }\n  };\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\n  return [history[index], setState, undo, redo];\n};\n_s(useHistory, \"iEmo9NqplUe5E9Qu5A/1RO54SF0=\");\nconst getSvgPathFromStroke = stroke => {\n  if (!stroke.length) return \"\";\n  const d = stroke.reduce((acc, [x0, y0], i, arr) => {\n    const [x1, y1] = arr[(i + 1) % arr.length];\n    acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n    return acc;\n  }, [\"M\", ...stroke[0], \"Q\"]);\n  d.push(\"Z\");\n  return d.join(\" \");\n};\nconst drawElement = (roughCanvas, context, element) => {\n  switch (element.type) {\n    case \"line\":\n    case \"rectangle\":\n      roughCanvas.draw(element.roughElement);\n      break;\n    case \"pencil\":\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\n      context.fill(new Path2D(stroke));\n      break;\n    case \"text\":\n      context.textBaseline = \"top\";\n      context.font = \"24px sans-serif\";\n      context.fillText(element.text, element.x1, element.y1);\n      break;\n    default:\n      throw new Error(`Type not recognised: ${element.type}`);\n  }\n};\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\nconst usePressedKeys = () => {\n  _s2();\n  const [pressedKeys, setPressedKeys] = useState(new Set());\n  useEffect(() => {\n    const handleKeyDown = event => {\n      setPressedKeys(prevKeys => new Set(prevKeys).add(event.key));\n    };\n    const handleKeyUp = event => {\n      setPressedKeys(prevKeys => {\n        const updatedKeys = new Set(prevKeys);\n        updatedKeys.delete(event.key);\n        return updatedKeys;\n      });\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, []);\n  return pressedKeys;\n};\n_s2(usePressedKeys, \"xlb7PG5d5IMfdFYT78NuKdshtGo=\");\nconst WhiteboardRoom = ({\n  userNo,\n  socket,\n  setUsers,\n  setUserNo\n}) => {\n  _s3();\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      alert(data.message);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"users\", data => {\n      setUsers(data);\n      setUserNo(data.length);\n    });\n  }, [setUsers, setUserNo, socket]);\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n  const [elements, setElements, undo, redo] = useHistory([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"rectangle\");\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [panOffset, setPanOffset] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [startPanMousePosition, setStartPanMousePosition] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const textAreaRef = useRef();\n  const pressedKeys = usePressedKeys();\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    const roughCanvas = rough.canvas(canvas);\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.save();\n    context.translate(panOffset.x, panOffset.y);\n    elements.forEach(element => {\n      if (action === \"writing\" && selectedElement.id === element.id) return;\n      drawElement(roughCanvas, context, element);\n    });\n    context.restore();\n  }, [elements, action, selectedElement, panOffset]);\n  useEffect(() => {\n    const undoRedoFunction = event => {\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\n        if (event.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n  }, [undo, redo]);\n  useEffect(() => {\n    const panFunction = event => {\n      setPanOffset(prevState => ({\n        x: prevState.x - event.deltaX,\n        y: prevState.y - event.deltaY\n      }));\n    };\n    document.addEventListener(\"wheel\", panFunction);\n    return () => {\n      document.removeEventListener(\"wheel\", panFunction);\n    };\n  }, []);\n  useEffect(() => {\n    const textArea = textAreaRef.current;\n    if (action === \"writing\") {\n      setTimeout(() => {\n        textArea.focus();\n        textArea.value = selectedElement.text;\n      }, 0);\n    }\n  }, [action, selectedElement]);\n  const updateElement = (id, x1, y1, x2, y2, type, options) => {\n    const elementsCopy = [...elements];\n    switch (type) {\n      case \"line\":\n      case \"rectangle\":\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\n        break;\n      case \"pencil\":\n        elementsCopy[id].points = [...elementsCopy[id].points, {\n          x: x2,\n          y: y2\n        }];\n        break;\n      case \"text\":\n        const textWidth = document.getElementById(\"canvas\").getContext(\"2d\").measureText(options.text).width;\n        const textHeight = 24;\n        elementsCopy[id] = {\n          ...createElement(id, x1, y1, x1 + textWidth, y1 + textHeight, type),\n          text: options.text\n        };\n        break;\n      default:\n        throw new Error(`Type not recognised: ${type}`);\n    }\n    setElements(elementsCopy, true);\n  };\n  const getMouseCoordinates = event => {\n    const clientX = event.clientX - panOffset.x;\n    const clientY = event.clientY - panOffset.y;\n    return {\n      clientX,\n      clientY\n    };\n  };\n  const handleMouseDown = event => {\n    if (action === \"writing\") return;\n    const {\n      clientX,\n      clientY\n    } = getMouseCoordinates(event);\n    if (event.button === 1 || pressedKeys.has(\" \")) {\n      setAction(\"panning\");\n      setStartPanMousePosition({\n        x: clientX,\n        y: clientY\n      });\n      return;\n    }\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      if (element) {\n        if (element.type === \"pencil\") {\n          const xOffsets = element.points.map(point => clientX - point.x);\n          const yOffsets = element.points.map(point => clientY - point.y);\n          setSelectedElement({\n            ...element,\n            xOffsets,\n            yOffsets\n          });\n        } else {\n          const offsetX = clientX - element.x1;\n          const offsetY = clientY - element.y1;\n          setSelectedElement({\n            ...element,\n            offsetX,\n            offsetY\n          });\n        }\n        setElements(prevState => prevState);\n        if (element.position === \"inside\") {\n          setAction(\"moving\");\n        } else {\n          setAction(\"resizing\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\n      setElements(prevState => [...prevState, element]);\n      setSelectedElement(element);\n      setAction(tool === \"text\" ? \"writing\" : \"drawing\");\n    }\n  };\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = getMouseCoordinates(event);\n    if (action === \"panning\") {\n      const deltaX = clientX - startPanMousePosition.x;\n      const deltaY = clientY - startPanMousePosition.y;\n      setPanOffset({\n        x: panOffset.x + deltaX,\n        y: panOffset.y + deltaY\n      });\n      return;\n    }\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\n    }\n    if (action === \"drawing\") {\n      const index = elements.length - 1;\n      const {\n        x1,\n        y1\n      } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n    } else if (action === \"moving\") {\n      if (selectedElement.type === \"pencil\") {\n        const newPoints = selectedElement.points.map((_, index) => ({\n          x: clientX - selectedElement.xOffsets[index],\n          y: clientY - selectedElement.yOffsets[index]\n        }));\n        const elementsCopy = [...elements];\n        elementsCopy[selectedElement.id] = {\n          ...elementsCopy[selectedElement.id],\n          points: newPoints\n        };\n        setElements(elementsCopy, true);\n      } else {\n        const {\n          id,\n          x1,\n          x2,\n          y1,\n          y2,\n          type,\n          offsetX,\n          offsetY\n        } = selectedElement;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const newX1 = clientX - offsetX;\n        const newY1 = clientY - offsetY;\n        const options = type === \"text\" ? {\n          text: selectedElement.text\n        } : {};\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type, options);\n      }\n    } else if (action === \"resizing\") {\n      const {\n        id,\n        type,\n        position,\n        ...coordinates\n      } = selectedElement;\n      const {\n        x1,\n        y1,\n        x2,\n        y2\n      } = resizedCoordinates(clientX, clientY, position, coordinates);\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n  const handleMouseUp = event => {\n    const {\n      clientX,\n      clientY\n    } = getMouseCoordinates(event);\n    if (selectedElement) {\n      if (selectedElement.type === \"text\" && clientX - selectedElement.offsetX === selectedElement.x1 && clientY - selectedElement.offsetY === selectedElement.y1) {\n        setAction(\"writing\");\n        return;\n      }\n      const index = selectedElement.id;\n      const {\n        id,\n        type\n      } = elements[index];\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\n        const {\n          x1,\n          y1,\n          x2,\n          y2\n        } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n    if (action === \"writing\") return;\n    setAction(\"none\");\n    setSelectedElement(null);\n  };\n  const handleBlur = event => {\n    const {\n      id,\n      x1,\n      y1,\n      type\n    } = selectedElement;\n    setAction(\"none\");\n    setSelectedElement(null);\n    updateElement(id, x1, y1, null, null, type, {\n      text: event.target.value\n    });\n  };\n  const saveImageToLocal = event => {\n    let link = event.currentTarget;\n    link.setAttribute('download', 'canvas.png');\n    let canvas = document.getElementById('canvas');\n    let image = canvas.toDataURL('image/png');\n    link.setAttribute('href', image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-5 pt-4 pb-3 text-center\",\n        children: [\"Whiteboard -\", userNo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          zIndex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"selection\",\n          checked: tool === \"selection\",\n          onChange: () => setTool(\"selection\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selection\",\n          children: \"Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"line\",\n          checked: tool === \"line\",\n          onChange: () => setTool(\"line\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"line\",\n          children: \"Line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"rectangle\",\n          checked: tool === \"rectangle\",\n          onChange: () => setTool(\"rectangle\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rectangle\",\n          children: \"Rectangle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"pencil\",\n          checked: tool === \"pencil\",\n          onChange: () => setTool(\"pencil\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pencil\",\n          children: \"Pencil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"text\",\n          checked: tool === \"text\",\n          onChange: () => setTool(\"text\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"download_image_link\",\n            href: \"download_link\",\n            onClick: saveImageToLocal,\n            children: \"Download Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          zIndex: 2,\n          bottom: 0,\n          padding: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: redo,\n          children: \"Redo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), action === \"writing\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        onBlur: handleBlur,\n        style: {\n          position: \"fixed\",\n          top: selectedElement.y1 - 2 + panOffset.y,\n          left: selectedElement.x1 + panOffset.x,\n          font: \"24px sans-serif\",\n          margin: 0,\n          padding: 0,\n          border: 0,\n          outline: 0,\n          resize: \"auto\",\n          overflow: \"hidden\",\n          whiteSpace: \"pre\",\n          background: \"transparent\",\n          zIndex: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(W, {\n          canvasRef: canvasRef,\n          ctx: ctx,\n          setElements: setElements,\n          elements: elements,\n          tool: tool,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 5\n  }, this);\n};\n_s3(WhiteboardRoom, \"Cf6Vfv7rBOWe/kxqkt9Z2741Nuk=\", false, function () {\n  return [useHistory, usePressedKeys];\n});\n_c = WhiteboardRoom;\nexport default WhiteboardRoom;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardRoom\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","rough","getStroke","jsxDEV","_jsxDEV","generator","createElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","points","x","y","text","Error","nearPoint","name","Math","abs","onLine","maxDistance","a","b","c","offset","distance","positionWithinElement","element","on","start","end","topLeft","topRight","bottomLeft","bottomRight","inside","betweenAnyPoint","some","point","index","nextPoint","sqrt","pow","getElementAtPosition","elements","map","position","find","adjustElementCoordinates","minX","min","maxX","max","minY","maxY","cursorForPosition","resizedCoordinates","clientX","clientY","coordinates","useHistory","initialState","_s","setIndex","history","setHistory","setState","action","overwrite","newState","historyCopy","updatedState","slice","prevState","undo","redo","length","getSvgPathFromStroke","stroke","d","reduce","acc","x0","y0","i","arr","push","join","drawElement","roughCanvas","context","draw","fill","Path2D","textBaseline","font","fillText","adjustmentRequired","includes","usePressedKeys","_s2","pressedKeys","setPressedKeys","Set","handleKeyDown","event","prevKeys","add","key","handleKeyUp","updatedKeys","delete","window","addEventListener","removeEventListener","WhiteboardRoom","userNo","socket","setUsers","setUserNo","_s3","data","alert","message","canvasRef","ctx","setElements","setAction","tool","setTool","selectedElement","setSelectedElement","panOffset","setPanOffset","startPanMousePosition","setStartPanMousePosition","textAreaRef","canvas","document","getElementById","getContext","clearRect","width","height","save","translate","forEach","restore","undoRedoFunction","metaKey","ctrlKey","shiftKey","panFunction","deltaX","deltaY","textArea","current","setTimeout","focus","value","updateElement","options","elementsCopy","textWidth","measureText","textHeight","getMouseCoordinates","handleMouseDown","button","has","xOffsets","yOffsets","offsetX","offsetY","handleMouseMove","target","style","cursor","newPoints","_","newX1","newY1","handleMouseUp","handleBlur","saveImageToLocal","link","currentTarget","setAttribute","image","toDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","checked","onChange","htmlFor","href","onClick","bottom","padding","ref","onBlur","top","left","margin","border","outline","resize","overflow","whiteSpace","background","W","_c","$RefreshReg$"],"sources":["D:/full stack mern,mean,java/Whiteboard Application/whiteboard-frontend/src/pages/canvas/WhiteboardRoom.jsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport rough from \"roughjs/bundled/rough.esm\";\r\nimport getStroke from \"perfect-freehand\";\r\n\r\nconst generator = rough.generator();\r\n\r\nconst createElement = (id, x1, y1, x2, y2, type) => {\r\n  switch (type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      const roughElement =\r\n        type === \"line\"\r\n          ? generator.line(x1, y1, x2, y2)\r\n          : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\r\n      return { id, x1, y1, x2, y2, type, roughElement };\r\n    case \"pencil\":\r\n      return { id, type, points: [{ x: x1, y: y1 }] };\r\n    case \"text\":\r\n      return { id, type, x1, y1, x2, y2, text: \"\" };\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst nearPoint = (x, y, x1, y1, name) => {\r\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\r\n};\r\n\r\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\r\n  const a = { x: x1, y: y1 };\r\n  const b = { x: x2, y: y2 };\r\n  const c = { x, y };\r\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\r\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\r\n};\r\n\r\nconst positionWithinElement = (x, y, element) => {\r\n  const { type, x1, x2, y1, y2 } = element;\r\n  switch (type) {\r\n    case \"line\":\r\n      const on = onLine(x1, y1, x2, y2, x, y);\r\n      const start = nearPoint(x, y, x1, y1, \"start\");\r\n      const end = nearPoint(x, y, x2, y2, \"end\");\r\n      return start || end || on;\r\n    case \"rectangle\":\r\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\r\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\r\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\r\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\r\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\r\n    case \"pencil\":\r\n      const betweenAnyPoint = element.points.some((point, index) => {\r\n        const nextPoint = element.points[index + 1];\r\n        if (!nextPoint) return false;\r\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\r\n      });\r\n      return betweenAnyPoint ? \"inside\" : null;\r\n    case \"text\":\r\n      return x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n\r\nconst getElementAtPosition = (x, y, elements) => {\r\n  return elements\r\n    .map(element => ({ ...element, position: positionWithinElement(x, y, element) }))\r\n    .find(element => element.position !== null);\r\n};\r\n\r\nconst adjustElementCoordinates = element => {\r\n  const { type, x1, y1, x2, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const minX = Math.min(x1, x2);\r\n    const maxX = Math.max(x1, x2);\r\n    const minY = Math.min(y1, y2);\r\n    const maxY = Math.max(y1, y2);\r\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\r\n  } else {\r\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\r\n      return { x1, y1, x2, y2 };\r\n    } else {\r\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\r\n    }\r\n  }\r\n};\r\n\r\nconst cursorForPosition = position => {\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"br\":\r\n    case \"start\":\r\n    case \"end\":\r\n      return \"nwse-resize\";\r\n    case \"tr\":\r\n    case \"bl\":\r\n      return \"nesw-resize\";\r\n    default:\r\n      return \"move\";\r\n  }\r\n};\r\n\r\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\r\n  const { x1, y1, x2, y2 } = coordinates;\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"start\":\r\n      return { x1: clientX, y1: clientY, x2, y2 };\r\n    case \"tr\":\r\n      return { x1, y1: clientY, x2: clientX, y2 };\r\n    case \"bl\":\r\n      return { x1: clientX, y1, x2, y2: clientY };\r\n    case \"br\":\r\n    case \"end\":\r\n      return { x1, y1, x2: clientX, y2: clientY };\r\n    default:\r\n      return null; //should not really get here...\r\n  }\r\n};\r\n\r\nconst useHistory = initialState => {\r\n  const [index, setIndex] = useState(0);\r\n  const [history, setHistory] = useState([initialState]);\r\n\r\n  const setState = (action, overwrite = false) => {\r\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\r\n    if (overwrite) {\r\n      const historyCopy = [...history];\r\n      historyCopy[index] = newState;\r\n      setHistory(historyCopy);\r\n    } else {\r\n      const updatedState = [...history].slice(0, index + 1);\r\n      setHistory([...updatedState, newState]);\r\n      setIndex(prevState => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\r\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\r\n\r\n  return [history[index], setState, undo, redo];\r\n};\r\n\r\nconst getSvgPathFromStroke = stroke => {\r\n  if (!stroke.length) return \"\";\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length];\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\r\n      return acc;\r\n    },\r\n    [\"M\", ...stroke[0], \"Q\"]\r\n  );\r\n\r\n  d.push(\"Z\");\r\n  return d.join(\" \");\r\n};\r\n\r\nconst drawElement = (roughCanvas, context, element) => {\r\n  switch (element.type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      roughCanvas.draw(element.roughElement);\r\n      break;\r\n    case \"pencil\":\r\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\r\n      context.fill(new Path2D(stroke));\r\n      break;\r\n    case \"text\":\r\n      context.textBaseline = \"top\";\r\n      context.font = \"24px sans-serif\";\r\n      context.fillText(element.text, element.x1, element.y1);\r\n      break;\r\n    default:\r\n      throw new Error(`Type not recognised: ${element.type}`);\r\n  }\r\n};\r\n\r\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\r\n\r\nconst usePressedKeys = () => {\r\n  const [pressedKeys, setPressedKeys] = useState(new Set());\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = event => {\r\n      setPressedKeys(prevKeys => new Set(prevKeys).add(event.key));\r\n    };\r\n\r\n    const handleKeyUp = event => {\r\n      setPressedKeys(prevKeys => {\r\n        const updatedKeys = new Set(prevKeys);\r\n        updatedKeys.delete(event.key);\r\n        return updatedKeys;\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  }, []);\r\n\r\n  return pressedKeys;\r\n};\r\n\r\nconst WhiteboardRoom = ({ userNo, socket, setUsers, setUserNo }) => {\r\n  useEffect(() => {\r\n    socket.on(\"message\", (data) => {\r\n      alert(data.message);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users\", (data) => {\r\n      setUsers(data);\r\n      setUserNo(data.length);\r\n    });\r\n  }, [setUsers, setUserNo, socket]);\r\n  const canvasRef = useRef(null);\r\n  const ctx = useRef(null);\r\n  const [elements, setElements, undo, redo] = useHistory([]);\r\n  const [action, setAction] = useState(\"none\");\r\n  const [tool, setTool] = useState(\"rectangle\");\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [panOffset, setPanOffset] = React.useState({ x: 0, y: 0 });\r\n  const [startPanMousePosition, setStartPanMousePosition] = React.useState({ x: 0, y: 0 });\r\n  const textAreaRef = useRef();\r\n  const pressedKeys = usePressedKeys();\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    const roughCanvas = rough.canvas(canvas);\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    context.save();\r\n    context.translate(panOffset.x, panOffset.y);\r\n\r\n    elements.forEach(element => {\r\n      if (action === \"writing\" && selectedElement.id === element.id) return;\r\n      drawElement(roughCanvas, context, element);\r\n    });\r\n    context.restore();\r\n  }, [elements, action, selectedElement, panOffset]);\r\n\r\n  useEffect(() => {\r\n    const undoRedoFunction = event => {\r\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\r\n        if (event.shiftKey) {\r\n          redo();\r\n        } else {\r\n          undo();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", undoRedoFunction);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", undoRedoFunction);\r\n    };\r\n  }, [undo, redo]);\r\n\r\n  useEffect(() => {\r\n    const panFunction = event => {\r\n      setPanOffset(prevState => ({\r\n        x: prevState.x - event.deltaX,\r\n        y: prevState.y - event.deltaY,\r\n      }));\r\n    };\r\n\r\n    document.addEventListener(\"wheel\", panFunction);\r\n    return () => {\r\n      document.removeEventListener(\"wheel\", panFunction);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const textArea = textAreaRef.current;\r\n    if (action === \"writing\") {\r\n      setTimeout(() => {\r\n        textArea.focus();\r\n        textArea.value = selectedElement.text;\r\n      }, 0);\r\n    }\r\n  }, [action, selectedElement]);\r\n\r\n  const updateElement = (id, x1, y1, x2, y2, type, options) => {\r\n    const elementsCopy = [...elements];\r\n\r\n    switch (type) {\r\n      case \"line\":\r\n      case \"rectangle\":\r\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\r\n        break;\r\n      case \"pencil\":\r\n        elementsCopy[id].points = [...elementsCopy[id].points, { x: x2, y: y2 }];\r\n        break;\r\n      case \"text\":\r\n        const textWidth = document\r\n          .getElementById(\"canvas\")\r\n          .getContext(\"2d\")\r\n          .measureText(options.text).width;\r\n        const textHeight = 24;\r\n        elementsCopy[id] = {\r\n          ...createElement(id, x1, y1, x1 + textWidth, y1 + textHeight, type),\r\n          text: options.text,\r\n        };\r\n        break;\r\n      default:\r\n        throw new Error(`Type not recognised: ${type}`);\r\n    }\r\n\r\n    setElements(elementsCopy, true);\r\n  };\r\n\r\n  const getMouseCoordinates = event => {\r\n    const clientX = event.clientX - panOffset.x;\r\n    const clientY = event.clientY - panOffset.y;\r\n    return { clientX, clientY };\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    if (action === \"writing\") return;\r\n\r\n    const { clientX, clientY } = getMouseCoordinates(event);\r\n\r\n    if (event.button === 1 || pressedKeys.has(\" \")) {\r\n      setAction(\"panning\");\r\n      setStartPanMousePosition({ x: clientX, y: clientY });\r\n      return;\r\n    }\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      if (element) {\r\n        if (element.type === \"pencil\") {\r\n          const xOffsets = element.points.map(point => clientX - point.x);\r\n          const yOffsets = element.points.map(point => clientY - point.y);\r\n          setSelectedElement({ ...element, xOffsets, yOffsets });\r\n        } else {\r\n          const offsetX = clientX - element.x1;\r\n          const offsetY = clientY - element.y1;\r\n          setSelectedElement({ ...element, offsetX, offsetY });\r\n        }\r\n        setElements(prevState => prevState);\r\n\r\n        if (element.position === \"inside\") {\r\n          setAction(\"moving\");\r\n        } else {\r\n          setAction(\"resizing\");\r\n        }\r\n      }\r\n    } else {\r\n      const id = elements.length;\r\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\r\n      setElements(prevState => [...prevState, element]);\r\n      setSelectedElement(element);\r\n\r\n      setAction(tool === \"text\" ? \"writing\" : \"drawing\");\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = event => {\r\n    const { clientX, clientY } = getMouseCoordinates(event);\r\n\r\n    if (action === \"panning\") {\r\n      const deltaX = clientX - startPanMousePosition.x;\r\n      const deltaY = clientY - startPanMousePosition.y;\r\n      setPanOffset({\r\n        x: panOffset.x + deltaX,\r\n        y: panOffset.y + deltaY,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\r\n    }\r\n\r\n    if (action === \"drawing\") {\r\n      const index = elements.length - 1;\r\n      const { x1, y1 } = elements[index];\r\n      updateElement(index, x1, y1, clientX, clientY, tool);\r\n    } else if (action === \"moving\") {\r\n      if (selectedElement.type === \"pencil\") {\r\n        const newPoints = selectedElement.points.map((_, index) => ({\r\n          x: clientX - selectedElement.xOffsets[index],\r\n          y: clientY - selectedElement.yOffsets[index],\r\n        }));\r\n        const elementsCopy = [...elements];\r\n        elementsCopy[selectedElement.id] = {\r\n          ...elementsCopy[selectedElement.id],\r\n          points: newPoints,\r\n        };\r\n        setElements(elementsCopy, true);\r\n      } else {\r\n        const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const newX1 = clientX - offsetX;\r\n        const newY1 = clientY - offsetY;\r\n        const options = type === \"text\" ? { text: selectedElement.text } : {};\r\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type, options);\r\n      }\r\n    } else if (action === \"resizing\") {\r\n      const { id, type, position, ...coordinates } = selectedElement;\r\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\r\n      updateElement(id, x1, y1, x2, y2, type);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = event => {\r\n    const { clientX, clientY } = getMouseCoordinates(event);\r\n    if (selectedElement) {\r\n      if (\r\n        selectedElement.type === \"text\" &&\r\n        clientX - selectedElement.offsetX === selectedElement.x1 &&\r\n        clientY - selectedElement.offsetY === selectedElement.y1\r\n      ) {\r\n        setAction(\"writing\");\r\n        return;\r\n      }\r\n\r\n      const index = selectedElement.id;\r\n      const { id, type } = elements[index];\r\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\r\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\r\n        updateElement(id, x1, y1, x2, y2, type);\r\n      }\r\n    }\r\n\r\n    if (action === \"writing\") return;\r\n\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    const { id, x1, y1, type } = selectedElement;\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n    updateElement(id, x1, y1, null, null, type, { text: event.target.value });\r\n  };\r\n  const saveImageToLocal = (event) => {\r\n    let link = event.currentTarget;\r\n    link.setAttribute('download', 'canvas.png');\r\n    let canvas = document.getElementById('canvas');\r\n    let image = canvas.toDataURL('image/png');\r\n    link.setAttribute('href', image);\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <h1 className=\"display-5 pt-4 pb-3 text-center\">Whiteboard -{userNo}</h1>\r\n      </div>\r\n      <div>\r\n        <div style={{ position: \"fixed\", zIndex: 2 }}>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"selection\"\r\n            checked={tool === \"selection\"}\r\n            onChange={() => setTool(\"selection\")}\r\n          />\r\n          <label htmlFor=\"selection\">Selection</label>\r\n\r\n          <input type=\"radio\" id=\"line\" checked={tool === \"line\"} onChange={() => setTool(\"line\")} />\r\n          <label htmlFor=\"line\">Line</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"rectangle\"\r\n            checked={tool === \"rectangle\"}\r\n            onChange={() => setTool(\"rectangle\")}\r\n          />\r\n          <label htmlFor=\"rectangle\">Rectangle</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"pencil\"\r\n            checked={tool === \"pencil\"}\r\n            onChange={() => setTool(\"pencil\")}\r\n          />\r\n          <label htmlFor=\"pencil\">Pencil</label>\r\n          <input type=\"radio\" id=\"text\" checked={tool === \"text\"} onChange={() => setTool(\"text\")} />\r\n          <label htmlFor=\"text\">Text</label>\r\n\r\n          <button className=\"btn btn-primary\"> <a id=\"download_image_link\" href=\"download_link\" onClick={saveImageToLocal}>Download Image</a></button>\r\n        </div>\r\n        <div style={{ position: \"fixed\", zIndex: 2, bottom: 0, padding: 10 }}>\r\n          <button onClick={undo}>Undo</button>\r\n          <button onClick={redo}>Redo</button>\r\n        </div>\r\n        {action === \"writing\" ? (\r\n          <textarea\r\n            ref={textAreaRef}\r\n            onBlur={handleBlur}\r\n            style={{\r\n              position: \"fixed\",\r\n              top: selectedElement.y1 - 2 + panOffset.y,\r\n              left: selectedElement.x1 + panOffset.x,\r\n              font: \"24px sans-serif\",\r\n              margin: 0,\r\n              padding: 0,\r\n              border: 0,\r\n              outline: 0,\r\n              resize: \"auto\",\r\n              overflow: \"hidden\",\r\n              whiteSpace: \"pre\",\r\n              background: \"transparent\",\r\n              zIndex: 2,\r\n            }}\r\n          />\r\n        ) : null}\r\n      <div className=\"row\">\r\n        <W\r\n          canvasRef={canvasRef}\r\n          ctx={ctx}\r\n          setElements={setElements}\r\n          elements={elements}\r\n          tool={tool}\r\n          socket={socket}\r\n        />\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhiteboardRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}